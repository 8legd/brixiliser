{"version":3,"sources":["webpack:///./src/libs/available-lego-brick-colours.js","webpack:///./src/libs/colour-utils.js","webpack:///./src/libs/image-utils.js","webpack:///./src/libs/lego/data/available-lego-brick-colours.js","webpack:///./src/libs/lego/colour-interpolate.js","webpack:///./src/libs/lego/dimensions.js","webpack:///./src/libs/lego/calculateOptimalBricks.js","webpack:///./src/libs/renderLego.js","webpack:///./src/components/LegoRenderer.js","webpack:///./src/libs/crop-canvas.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/ImageUpload.js"],"names":["uniqueColours","available_lego_brick_colours_uniqueColours","plates","map","plate","indexOf","push","toLowerCase","available_lego_brick_colours","colours","filter","colour","name","DeltaE","__webpack_require__","h2r","hex","result","exec","parseInt","rgb2lab","rgb","x","y","z","r","g","b","Math","pow","labpalette","obj","getHex","toString","slice","mapColorToPalette","red","green","blue","color","diffDistance","mappedColor","lab","distance","i","length","inputColour","getDeltaE94","L","A","B","max","min","scaleImageData","ctx","imageData","scale","scaled","createImageData","width","height","subLine","data","row","col","sourcePixel","subarray","set","destRow","destCol","data_available_lego_brick_colours_uniqueColours","data_plates","available_lego_brick_colours_getUniqueColours","data_available_lego_brick_colours","data_colours","colour_interpolate_DeltaE","colour_interpolate_h2r","r2h","colour_interpolate_labpalette","colour_interpolate_rgb2lab","colour_interpolate_mapColorToPalette","colour_interpolate_lab2rgb","getNextBestColourMatch","exclusions","testPalette","colourAsHex","findIndex","ecol","input","getDeltaE00","lego_dimensions","brick","test","Name","matches","undefined","calculateOptimalBricks","originalImageData","currentColour","outputBricks","Uint8ClampedArray","topLeftPixelValue","topLeftAlpha","alpha","isTransparentBlock","ignore","index","floor","mergeBlocks","thisBrick","brickColour","brickSizes","getBrickSizesForColour","a","l","hbrickFit","genericBrickFit","fits","blocks","vbrickFit","mergeSingles","maxCount","ignoreSmallOnes","dimension","sort","reverse","sourceBrickIndex","additionalBricks","nextColBrick","j","jl","nextLineBrick","concat","every","val","values","checkInvalidPixels","invalidCount","hasSinglePixelBlock","excludedColours","spacer","drawStuds","brickSize","xCount","yCount","beginPath","arc","PI","fill","stroke","closePath","LegoRenderer_LegoRenderer","LegoRenderer","props","_this","_Component","call","this","sourceData","updateCanvas","componentDidMount","componentDidUpdate","prevProps","URI","_this2","Promise","resolve","reject","canvas","document","createElement","context","getContext","image","Image","addEventListener","drawImage","getImageData","src","then","mapping","mappedColour","remapPixelColours","refs","offscreen_canvas","imageSmoothingEnabled","scaledImageData","putImageData","cropped","w","h","pix","n","cropImageFromCanvas","largestValue","tiles","ceil","optimalData","outputCanvas","optimalBricks","imageWidth","imageHeight","offsetX","offsetY","outputContext","clearRect","lineWidth","fillStyle","drawTile","fillRect","strokeRect","strokeStyle","color_default","lighten","xPos","yPos","renderImageDataAsLego","canvas_lego","console","error","drawImageData","pixelScaler","render","react_default","className","style","position","background","display","ref","react","components_LegoRenderer","Object","es","state","assign","imageURL","dispatch","react_measure","_ref","measureRef","contentRect","measure","objectWithoutPropertiesLoose_default","bounds","__webpack_exports__","layout","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","header","pokemonid","setPokemon","id","type","payload","siteTitle","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","textDecoration","onClick","layout_Layout","Fragment","Helmet_default","title","site","siteMetadata","meta","content","lang","_755544856","prop_types_default","node"],"mappings":"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","file":"component---src-pages-index-js-f0f10834b643e9064810.js","sourcesContent":["import platesData from '../data/plates.json'\nimport colours from '../data/colours.json'\n\nconst uniqueColours = getUniqueColours()\n\nconst filteredColours = colours.filter(colour => {\n  return uniqueColours.indexOf(colour.name.toLowerCase()) !== -1\n})\n\nexport default filteredColours\n\nfunction getUniqueColours() {\n  let uniqueColours = []\n  platesData.map(plate => {\n    if (uniqueColours.indexOf(plate['Exact Colour'] !== -1)) {\n      uniqueColours.push(plate['Exact Colour'].toLowerCase())\n    }\n  })\n  return uniqueColours\n}\n","import legoPalette from './available-lego-brick-colours'\n\nconst DeltaE = require('delta-e')\n\nexport const h2r = hex => {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null\n}\n\nexport const lab2rgb = lab => {\n  var y = (lab[0] + 16) / 116,\n    x = lab[1] / 500 + y,\n    z = y - lab[2] / 200,\n    r,\n    g,\n    b\n\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787)\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787)\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787)\n\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415\n  b = x * 0.0557 + y * -0.204 + z * 1.057\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b\n\n  return [\n    Math.max(0, Math.min(1, r)) * 255,\n    Math.max(0, Math.min(1, g)) * 255,\n    Math.max(0, Math.min(1, b)) * 255,\n  ]\n}\n\nexport const rgb2lab = rgb => {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    x,\n    y,\n    z\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  return [116 * y - 16, 500 * (x - y), 200 * (y - z)]\n}\n\nconst palette = legoPalette.map(obj => {\n  let rgb = h2r(obj.hex)\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n  }\n})\n\nconst labpalette = legoPalette.map(obj => {\n  let rgb = rgb2lab(h2r(obj.hex))\n  return rgb\n})\n\nexport const getHex = (r, g, b) => {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7)\n}\n\nexport const remapPixelColours = originalImageData => {\n  let mapping = {}\n\n  let imageData = {\n    width: originalImageData.width,\n    height: originalImageData.height,\n    data: new Uint8ClampedArray(originalImageData.data),\n  }\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    let mappedColour = mapColorToPalette(\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2]\n    )\n    if (\n      !mapping[\n        getHex(imageData.data[i], imageData.data[i + 1], imageData.data[i + 2])\n      ]\n    ) {\n      mapping[\n        getHex(imageData.data[i], imageData.data[i + 1], imageData.data[i + 2])\n      ] = getHex(mappedColour.r, mappedColour.g, mappedColour.b)\n    }\n    imageData.data[i] = mappedColour.r\n    imageData.data[i + 1] = mappedColour.g\n    imageData.data[i + 2] = mappedColour.b\n  }\n\n  // console.log(imageData, mapping)\n  return { imageData, mapping }\n}\n\nexport const mapColorToPalette = (red, green, blue) => {\n  // console.log(r2h([red, green, blue]))\n  // return nearestColor(r2h([red, green, blue]))\n  let color, diffR, diffG, diffB, diffDistance, mappedColor\n  let distance = 25000\n  for (let i = 0; i < labpalette.length; i++) {\n    color = labpalette[i]\n    // diffR = (color.r - red)\n    // diffG = (color.g - green)\n    // diffB = (color.b - blue)\n    // diffDistance = diffR * diffR + diffG * diffG + diffB * diffB\n    let inputColour = rgb2lab([red, green, blue])\n    diffDistance = DeltaE.getDeltaE94(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: inputColour[0], A: inputColour[1], B: inputColour[2] }\n    )\n    // console.log(color, red, green, blue, diffDistance)\n    if (diffDistance < distance) {\n      distance = diffDistance\n      mappedColor = lab2rgb(labpalette[i])\n    }\n  }\n  return {\n    r: mappedColor[0],\n    g: mappedColor[1],\n    b: mappedColor[2],\n  }\n}\n","export const convertURIToImageData = URI => {\n  return new Promise(function(resolve, reject) {\n    if (URI == null) return reject()\n    var canvas = document.createElement('canvas'),\n      context = canvas.getContext('2d'),\n      image = new Image()\n    image.addEventListener(\n      'load',\n      function() {\n        canvas.width = image.width\n        canvas.height = image.height\n        context.drawImage(this, 0, 0, canvas.width, canvas.height)\n        resolve(context.getImageData(0, 0, canvas.width, canvas.height))\n      },\n      false\n    )\n    image.src = URI\n  })\n}\n\nexport const scaleImageData = (ctx, imageData, scale) => {\n  var scaled = ctx.createImageData(\n    imageData.width * scale,\n    imageData.height * scale\n  )\n  var subLine = ctx.createImageData(scale, 1).data\n  for (var row = 0; row < imageData.height; row++) {\n    for (var col = 0; col < imageData.width; col++) {\n      var sourcePixel = imageData.data.subarray(\n        (row * imageData.width + col) * 4,\n        (row * imageData.width + col) * 4 + 4\n      )\n      for (var x = 0; x < scale; x++) subLine.set(sourcePixel, x * 4)\n      for (var y = 0; y < scale; y++) {\n        var destRow = row * scale + y\n        var destCol = col * scale\n        scaled.data.set(subLine, (destRow * scaled.width + destCol) * 4)\n      }\n    }\n  }\n\n  return scaled\n}\n","import platesData from './plates.json'\nimport colours from './colours.json'\n\nconst uniqueColours = getUniqueColours()\n\nconst filteredColours = colours.filter((colour) => {\n  return uniqueColours.indexOf(colour.name.toLowerCase()) !== -1\n})\n\nexport default filteredColours\n\nfunction getUniqueColours () {\n  let uniqueColours = []\n  platesData.map((plate) => {\n    if (uniqueColours.indexOf(plate['Exact Colour'] !== -1)) {\n      uniqueColours.push(plate['Exact Colour'].toLowerCase())\n    }\n  })\n  return uniqueColours\n}\n","import legoPalette from './data/available-lego-brick-colours'\n\nvar DeltaE = require('delta-e')\n\n// Converts a #ffffff hex string into an [r,g,b] array\nexport function h2r(hex) {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null\n}\n\n// Inverse of the above\nexport function r2h(rgb) {\n  // return '#' + ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  // rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/)\n  function hex(x) {\n    return ('0' + parseInt(x).toString(16)).slice(-2)\n  }\n  return '#' + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2])\n}\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nexport function _interpolateColor(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5\n  }\n  let result = color1.slice()\n  for (let i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]))\n  }\n  return result\n}\n\nexport function rgb2hsl(color) {\n  let r = color[0] / 255\n  let g = color[1] / 255\n  let b = color[2] / 255\n\n  let max = Math.max(r, g, b),\n    min = Math.min(r, g, b)\n  let h,\n    s,\n    l = (max + min) / 2\n\n  if (max == min) {\n    h = s = 0 // achromatic\n  } else {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return [h, s, l]\n}\n\nexport function hsl2rgb(color) {\n  let l = color[2]\n\n  if (color[1] == 0) {\n    l = Math.round(l * 255)\n    return [l, l, l]\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) {\n        t += 1\n      }\n      if (t > 1) {\n        t -= 1\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t\n      }\n      if (t < 1 / 2) {\n        return q\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6\n      }\n      return p\n    }\n\n    let s = color[1]\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    let p = 2 * l - q\n    let r = hue2rgb(p, q, color[0] + 1 / 3)\n    let g = hue2rgb(p, q, color[0])\n    let b = hue2rgb(p, q, color[0] - 1 / 3)\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)]\n  }\n}\n\nexport function _interpolateHSL(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5\n  }\n  let hsl1 = rgb2hsl(color1)\n  let hsl2 = rgb2hsl(color2)\n  for (let i = 0; i < 3; i++) {\n    hsl1[i] += factor * (hsl2[i] - hsl1[i])\n  }\n  return hsl2rgb(hsl1)\n}\n\nconst palette = legoPalette.map(obj => {\n  let rgb = h2r(obj.hex)\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n  }\n})\n\nconst labpalette = legoPalette.map(obj => {\n  let rgb = rgb2lab(h2r(obj.hex))\n  return rgb\n})\n\n// var nearestColor = require('nearest-color').from(palette.map((c) => {\n//   return r2h([c.r, c.g, c.b])\n// }))\n// use Euclidian distance to find closest color\n// send in the rgb of the pixel to be substituted\nexport function mapColorToPalette(red, green, blue) {\n  // console.log(r2h([red, green, blue]))\n  // return nearestColor(r2h([red, green, blue]))\n  let color, diffR, diffG, diffB, diffDistance, mappedColor\n  let distance = 25000\n  for (let i = 0; i < labpalette.length; i++) {\n    color = labpalette[i]\n    // diffR = (color.r - red)\n    // diffG = (color.g - green)\n    // diffB = (color.b - blue)\n    // diffDistance = diffR * diffR + diffG * diffG + diffB * diffB\n    let inputColour = rgb2lab([red, green, blue])\n    diffDistance = DeltaE.getDeltaE94(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: inputColour[0], A: inputColour[1], B: inputColour[2] }\n    )\n    // console.log(color, red, green, blue, diffDistance)\n    if (diffDistance < distance) {\n      distance = diffDistance\n      mappedColor = lab2rgb(labpalette[i])\n    }\n  }\n  return {\n    r: mappedColor[0],\n    g: mappedColor[1],\n    b: mappedColor[2],\n  }\n}\n\n/**\n * Takes a colour and finds its nearest not-matching colour.\n * @param {string} inputColour\n */\nexport function getNextBestColourMatch(inputColour, exclusions) {\n  let color, diffDistance, mappedColor\n  let distance = 25000\n  // let exclusionsAsLab = exclusions.map(colour => {\n  //   return rgb2lab(h2r(colour))\n  // })\n\n  let testPalette = labpalette.filter(colour => {\n    let colourAsHex = r2h(lab2rgb(colour))\n    let index = exclusions.findIndex(ecol => {\n      // return ecol[0] === colour[0] && ecol[1] === colour[1] && ecol[2] === colour[2]\n      return ecol === colourAsHex\n    })\n    return index === -1\n  })\n\n  for (let i = 0; i < testPalette.length; i++) {\n    color = testPalette[i]\n    let input = rgb2lab(h2r(inputColour))\n    diffDistance = DeltaE.getDeltaE00(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: input[0], A: input[1], B: input[2] }\n    )\n    if (diffDistance < distance && diffDistance > 0) {\n      distance = diffDistance\n      mappedColor = lab2rgb(testPalette[i])\n    }\n  }\n  // console.log(diffDistance)\n  return r2h(mappedColor)\n}\n\nexport function lab2rgb(lab) {\n  var y = (lab[0] + 16) / 116,\n    x = lab[1] / 500 + y,\n    z = y - lab[2] / 200,\n    r,\n    g,\n    b\n\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787)\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787)\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787)\n\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415\n  b = x * 0.0557 + y * -0.204 + z * 1.057\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b\n\n  return [\n    Math.max(0, Math.min(1, r)) * 255,\n    Math.max(0, Math.min(1, g)) * 255,\n    Math.max(0, Math.min(1, b)) * 255,\n  ]\n}\n\nexport function rgb2lab(rgb) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    x,\n    y,\n    z\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  return [116 * y - 16, 500 * (x - y), 200 * (y - z)]\n}\n\n// calculate the perceptual distance between colors in CIELAB\n// https://github.com/THEjoezack/ColorMine/blob/master/ColorMine/ColorSpaces/Comparisons/Cie94Comparison.cs\n\n// export function deltaE (labA, labB) {\n//   var deltaL = labA[0] - labB[0]\n//   var deltaA = labA[1] - labB[1]\n//   var deltaB = labA[2] - labB[2]\n//   var c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2])\n//   var c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2])\n//   var deltaC = c1 - c2\n//   var deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC\n//   deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH)\n//   var sc = 1.0 + 0.045 * c1\n//   var sh = 1.0 + 0.015 * c1\n//   var deltaLKlsl = deltaL / (1.0)\n//   var deltaCkcsc = deltaC / (sc)\n//   var deltaHkhsh = deltaH / (sh)\n//   var i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh\n//   return i < 0 ? 0 : Math.sqrt(i)\n// }\n\nfunction padToTwo(numberString) {\n  if (numberString.length < 2) {\n    numberString = '0' + numberString\n  }\n  return numberString\n}\n\nexport function hexAverage() {\n  var args = Array.prototype.slice.call(arguments)\n  // console.log(args, arguments)\n  return args\n    .reduce(\n      function(previousValue, currentValue) {\n        return currentValue\n          .replace(/^#/, '')\n          .match(/.{2}/g)\n          .map(function(value, index) {\n            return previousValue[index] + parseInt(value, 16)\n          })\n      },\n      [0, 0, 0]\n    )\n    .reduce(function(previousValue, currentValue) {\n      return (\n        previousValue +\n        padToTwo(Math.floor(currentValue / args.length).toString(16))\n      )\n    }, '#')\n}\n","import platesData from './data/plates.json'\nimport coloursData from './data/available-lego-brick-colours'\n\nconst dimensions = platesData\n    .filter((brick) => {\n      return /^PLATE\\s([0-9]*)X([0-9]*)$/gi.test(brick.Name)\n    })\n    .map((brick) => {\n      let matches = /^PLATE\\s([0-9]*)X([0-9]*)$/gi.exec(brick.Name)\n      let data = coloursData.filter((colour) => {\n        return brick['Exact Colour'].toLowerCase() === colour.name.toLowerCase()\n      })[0]\n      let hex = (data !== undefined) ? data.hex : undefined\n      return [matches[1], matches[2], hex]\n    })\n\nexport default dimensions\n","import {\n  r2h,\n  h2r,\n  getNextBestColourMatch,\n  hexAverage,\n  mapColorToPalette,\n} from './colour-interpolate'\nimport dimensions from './dimensions'\nvar DeltaE = require('delta-e')\n\nconst calculateFromImageData = originalImageData => {\n  let currentColour\n  let outputBricks = []\n\n  let imageData = {\n    width: originalImageData.width,\n    height: originalImageData.height,\n    data: new Uint8ClampedArray(originalImageData.data),\n  }\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    let color = mapColorToPalette(\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2]\n    )\n    imageData.data[i] = color.r\n    imageData.data[i + 1] = color.g\n    imageData.data[i + 2] = color.b\n    // let hexColor = r2h([imageData.data[i], imageData.data[i + 1], imageData.data[i + 2]]);\n    // if (!imageStats[hexColor]) {\n    //   imageStats[hexColor] = 0;\n    // }\n    // if (imageData.data[i + 3] === 255) {\n    //   imageStats[hexColor]++;\n    // }\n  }\n\n  // console.log(imageData.width, imageData.height)\n\n  let topLeftPixelValue = r2h([\n    imageData.data[0],\n    imageData.data[1],\n    imageData.data[2],\n  ])\n  let topLeftAlpha = imageData.data[3]\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    currentColour = r2h([\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2],\n    ])\n    let alpha = imageData.data[i + 3]\n\n    let isTransparentBlock =\n      alpha !== 255 ||\n      (currentColour === topLeftPixelValue && alpha === topLeftAlpha)\n    if (isTransparentBlock) {\n      currentColour = undefined\n    }\n    // let isTransparentBlock = false\n\n    outputBricks.push({\n      colour: currentColour,\n      ignore: !!isTransparentBlock,\n      index: i,\n      // ref: [imageData.data[i], imageData.data[i + 1], imageData.data[i + 2]]\n    })\n  }\n\n  for (let i = 0; i < outputBricks.length; i++) {\n    if (outputBricks[i]) {\n      outputBricks[i].x = i % imageData.width\n      outputBricks[i].y = Math.floor(i / imageData.width)\n      outputBricks[i].width = 1\n      outputBricks[i].height = 1\n    }\n  }\n\n  function mergeBlocks(outputBricks) {\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      let thisBrick = outputBricks[i]\n      let brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        let brickSizes = getBrickSizesForColour(brickColour, true)\n\n        for (let a = 0, l = brickSizes.length; a < l; a++) {\n          let hbrickFit = genericBrickFit(i, brickSizes[a][1], brickSizes[a][0])\n          // let vbrickFit = genericBrickFit(i, brickSizes[a][0], brickSizes[a][1])\n          if (hbrickFit.fits) {\n            thisBrick.width = brickSizes[a][1]\n            thisBrick.height = brickSizes[a][0]\n            hbrickFit.blocks.map(brick => {\n              // brick.colour = undefined\n              brick.ignore = true\n              // brick.width = 0\n              // brick.height = 0\n            })\n            break\n          }\n        }\n\n        for (let a = 0, l = brickSizes.length; a < l; a++) {\n          let vbrickFit = genericBrickFit(i, brickSizes[a][0], brickSizes[a][1])\n          if (vbrickFit.fits) {\n            thisBrick.width = brickSizes[a][0]\n            thisBrick.height = brickSizes[a][1]\n            vbrickFit.blocks.map(brick => {\n              // brick.colour = undefined\n              brick.ignore = true\n              // brick.width = 0\n              // brick.height = 0\n            })\n            break\n          }\n        }\n      }\n    }\n\n    mergeSingles(outputBricks)\n  }\n\n  mergeBlocks(outputBricks)\n\n  let maxCount = 0\n  checkInvalidPixels()\n\n  mergeBlocks(outputBricks)\n  // mergeSingles(outputBricks)\n\n  function checkInvalidPixels() {\n    maxCount++\n    let invalidCount = 0\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      let thisBrick = outputBricks[i]\n      let brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        let brickSizes = getBrickSizesForColour(brickColour, false)\n        let hasSinglePixelBlock =\n          brickSizes.filter(brick => {\n            return parseInt(brick[0], 10) === 1 && parseInt(brick[1], 10) === 1\n          }).length > 0\n\n        if (\n          parseInt(thisBrick.width, 10) === 1 &&\n          parseInt(thisBrick.height, 10) === 1 &&\n          !hasSinglePixelBlock\n        ) {\n          // todo: find the next nearest mapping for this colour\n          // thisBrick.colour = '#ff00ff'// getNextBestColourMatch(thisBrick.colour)\n          if (!outputBricks[i].excludedColours) {\n            outputBricks[i].excludedColours = []\n          }\n          // console.log('outputBricks[i].excludedColours = ', outputBricks[i].excludedColours)\n          // console.log(thisBrick)\n          outputBricks[i].excludedColours.push(thisBrick.colour)\n          thisBrick.colour = getNextBestColourMatch(\n            r2h([\n              originalImageData.data[thisBrick.index],\n              originalImageData.data[thisBrick.index + 1],\n              originalImageData.data[thisBrick.index + 2],\n            ]),\n            outputBricks[i].excludedColours\n          )\n          invalidCount++\n          // todo: re-run the pixel analysis from scratch with new imagedata\n        }\n      }\n    }\n    if (invalidCount > 0) {\n      // console.log(invalidCount, 'pixels invalid')\n      if (maxCount < 10) {\n        // mergeSingles(outputBricks)\n        checkInvalidPixels()\n      }\n      // } else {\n      //   console.log('all pixels okay!')\n    }\n  }\n\n  function getBrickSizesForColour(colour, ignoreSmallOnes) {\n    return dimensions\n      .filter(dimension => {\n        //  console.log(dimension[2], brickColour);\n        return dimension[2] === colour\n      })\n      .filter(dimension => {\n        let width = parseInt(dimension[0], 10)\n        let height = parseInt(dimension[1], 10)\n        if (ignoreSmallOnes) {\n          return width > 1 && height > 1\n        } else {\n          return width === 1 || height === 1\n        }\n      })\n      .sort((a, b) => {\n        return parseInt(a[0], 10) - parseInt(b[0], 10)\n      })\n      .reverse()\n  }\n\n  function mergeSingles(outputBricks) {\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      let thisBrick = outputBricks[i]\n      let brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        if (thisBrick.width == 1 && thisBrick.height == 1) {\n          let brickSizes = getBrickSizesForColour(brickColour, false)\n\n          for (let a = 0, l = brickSizes.length; a < l; a++) {\n            let hbrickFit = genericBrickFit(\n              i,\n              brickSizes[a][1],\n              brickSizes[a][0]\n            )\n            if (hbrickFit.fits) {\n              thisBrick.width = brickSizes[a][1]\n              thisBrick.height = brickSizes[a][0]\n              // thisBrick.ignore = false\n              // console.log(hbrickFit.blocks.length)\n              hbrickFit.blocks.map(brick => {\n                // brick.colour = undefined\n                brick.ignore = true\n                // brick.width = 0\n                // brick.height = 0\n              })\n              break\n            }\n          }\n\n          for (let a = 0, l = brickSizes.length; a < l; a++) {\n            let vbrickFit = genericBrickFit(\n              i,\n              brickSizes[a][0],\n              brickSizes[a][1]\n            )\n            if (vbrickFit.fits) {\n              thisBrick.width = brickSizes[a][0]\n              thisBrick.height = brickSizes[a][1]\n              // thisBrick.ignore = false\n              // console.log(vbrickFit.blocks.length)\n              vbrickFit.blocks.map(brick => {\n                // brick.colour = undefined\n                brick.ignore = true\n                // brick.width = 0\n                // brick.height = 0\n              })\n              break\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function genericBrickFit(sourceBrickIndex, width, height) {\n    let thisBrick = outputBricks[sourceBrickIndex]\n    let additionalBricks = []\n    for (let i = 0, l = width; i < l; i++) {\n      if (i !== 0) {\n        let nextColBrick = outputBricks[sourceBrickIndex + i]\n        // if (!nextColBrick) {\n        //   additionalBricks.push(nextColBrick)\n        // }\n        if (nextColBrick) {\n          if (\n            nextColBrick.width == 1 &&\n            nextColBrick.height == 1 &&\n            !nextColBrick.ignore\n          ) {\n            additionalBricks.push(nextColBrick)\n          } else {\n            additionalBricks.push(undefined)\n          }\n        } else {\n          if (!nextColBrick) {\n            additionalBricks.push(nextColBrick)\n          }\n        }\n      }\n      for (let j = 1, jl = height; j < jl; j++) {\n        let nextLineBrick =\n          outputBricks[sourceBrickIndex + i + j * imageData.width]\n        // if (!nextLineBrick) {\n        //   additionalBricks.push(nextLineBrick)\n        // }\n        if (nextLineBrick) {\n          if (\n            nextLineBrick.width == 1 &&\n            nextLineBrick.height == 1 &&\n            !nextLineBrick.ignore\n          ) {\n            additionalBricks.push(nextLineBrick)\n          } else {\n            additionalBricks.push(undefined)\n          }\n        } else {\n          if (!nextLineBrick) {\n            additionalBricks.push(nextLineBrick)\n          }\n        }\n      }\n    }\n\n    let remainingDistanceToEdge = imageData.width - (i % imageData.width)\n    if (remainingDistanceToEdge < width) {\n      return {\n        fits: false,\n      }\n    }\n\n    // let unfilteredBricks = additionalBricks.length\n    // console.log(additionalBricks.filter((brick) => { return !brick }).length, unfilteredBricks)\n\n    if (\n      additionalBricks.filter(brick => {\n        return !brick\n      }).length\n    ) {\n      return { fits: false }\n    }\n\n    let values = [].concat(thisBrick, additionalBricks)\n\n    // const colour = values[0].colour\n\n    let yahtzeeQualify = values.every((val, i, values) => {\n      if (!(values[0].width == 1 && values[0].height == 1) || !!val.ignore) {\n        return false\n      }\n      // if ((val.width === 0 && val.height === 0) || val.ignore) {\n      //   return false\n      // }\n      return val.colour === values[0].colour\n    })\n\n    return {\n      fits: yahtzeeQualify,\n      blocks: additionalBricks,\n    }\n  }\n\n  const rtn = outputBricks.filter(brick => {\n    // return brick.colour !== undefined && !brick.ignore\n    return !brick.ignore\n  })\n\n  return rtn\n}\n\nexport default calculateFromImageData\n","// import remapPixelColours from './lego/remapPixelColours'\nimport Color from 'color'\n\nconst spacer = 0.25 //1;\n\n// function render() {\n//   this.width = this.$el.offsetWidth\n//   this.height = this.$el.offsetHeight\n\n//   let optimalBricks = this._props.optimalBricks\n\n//   if (!this._props.optimalBricks) {\n//     return\n//   }\n\n//   var canvas = this.$refs.canvas\n//   let ctx = canvas.getContext('2d')\n\n//   // ctx.imageSmoothingEnabled = false\n\n//   if (!this._props.imagedata || !this._props.imagedata.data) {\n//     return\n//   }\n\n//   let { imageData } = remapPixelColours(this._props.imagedata)\n\n//   // let optimalBricks = CalculateOptimalBricks.calculateFromImageData(imageData)\n//   let width = imageData.width\n//   let height = imageData.height\n//   // console.log(width, height)\n//   let imageSize = width < height ? height : width\n\n//   renderImageDataAsLego(ctx, canvas, imageSize, optimalBricks, width, height)\n// }\n\nexport function renderImageDataAsLego(\n  //   outputContext,\n  outputCanvas,\n  //   height,\n  optimalBricks,\n  imageWidth,\n  imageHeight,\n  offsetX,\n  offsetY\n) {\n  const height = imageWidth < imageHeight ? imageHeight : imageWidth\n  const outputContext = outputCanvas.getContext('2d')\n  outputContext.clearRect(0, 0, outputCanvas.width, outputCanvas.height)\n  let canvas = document.createElement('canvas')\n  canvas.width = outputCanvas.width\n  canvas.height = outputCanvas.height\n  let context = canvas.getContext('2d')\n  let brickSize = outputCanvas.height / height\n\n  context.lineWidth = 0.25\n  context.fillStyle = '#ffffff'\n\n  const drawTile = (row, col) => {\n    const size = 32\n    context.fillRect(\n      size * (row * brickSize),\n      size * (col * brickSize),\n      size * (row + 1) * brickSize,\n      size * (col + 1) * brickSize\n    )\n    context.strokeRect(\n      size * (row * brickSize),\n      size * (col * brickSize),\n      size * (row + 1) * brickSize,\n      size * (col + 1) * brickSize\n    )\n    // context.strokeRect(0, 32 * brickSize, 32 * brickSize, 32 * brickSize)\n    // context.strokeRect(32 * brickSize, 0, 32 * brickSize, 32 * brickSize)\n    // context.strokeRect(\n    //   32 * brickSize,\n    //   32 * brickSize,\n    //   32 * brickSize,\n    //   32 * brickSize\n    // )\n    drawStuds(context, brickSize, spacer, size * row, size * col, size, size)\n  }\n\n  drawTile(0, 0)\n  drawTile(0, 1)\n  drawTile(0, 2)\n  drawTile(1, 0)\n  drawTile(1, 1)\n  drawTile(1, 2)\n  drawTile(2, 0)\n  drawTile(2, 1)\n  drawTile(2, 2)\n\n  if (optimalBricks) {\n    for (let i = 0, l = optimalBricks.length; i < l; i++) {\n      // if (!optimalBricks[i].ignore) {\n      let xCount = optimalBricks[i].x + offsetX\n      let yCount = optimalBricks[i].y + offsetY\n      context.fillStyle = optimalBricks[i].colour\n      // if (Color(optimalBricks[i].colour).light()) {\n      context.strokeStyle = '#000000'\n      // } else {\n      //     context.strokeStyle = '#ffffff'\n      // }\n      context.fillRect(\n        xCount * brickSize + spacer,\n        yCount * brickSize + spacer,\n        optimalBricks[i].width * brickSize - spacer * 2,\n        optimalBricks[i].height * brickSize - spacer * 2\n      )\n      context.strokeRect(\n        xCount * brickSize + spacer,\n        yCount * brickSize + spacer,\n        optimalBricks[i].width * brickSize - spacer * 2,\n        optimalBricks[i].height * brickSize - spacer * 2\n      )\n\n      context.fillStyle = Color(optimalBricks[i].colour).lighten(0.1)\n      drawStuds(\n        context,\n        brickSize,\n        spacer,\n        xCount,\n        yCount,\n        optimalBricks[i].width,\n        optimalBricks[i].height\n      )\n      // }\n    }\n    let ratio = imageWidth / imageHeight\n    let isLandscape = ratio > 1\n    let xPos = 0\n    let yPos = 0\n    if (!isLandscape) {\n      xPos = ((imageHeight - imageWidth) / 2) * (outputCanvas.height / height)\n    } else {\n      yPos = ((imageWidth - imageHeight) / 2) * (outputCanvas.height / height)\n    }\n    outputContext.drawImage(canvas, xPos, yPos)\n  }\n}\n\nfunction drawStuds(ctx, brickSize, spacer, xCount, yCount, width, height) {\n  for (var i = 0, l = width; i < l; i++) {\n    for (var j = 0, jl = height; j < jl; j++) {\n      ctx.beginPath()\n      ctx.arc(\n        (xCount + i) * brickSize + -spacer / 2 + brickSize / 2,\n        (yCount + j) * brickSize + -spacer / 2 + brickSize / 2,\n        brickSize * 0.3,\n        0,\n        2 * Math.PI\n      )\n      ctx.fill()\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n\n// export default render\n","import React, { Component } from 'react'\n// import MeasureIt from 'react-measure-it'\nimport { withContentRect } from 'react-measure'\n\nimport { connect } from 'react-redux'\n// import { bindActionCreators } from 'redux'\n// import { setImageData } from '../store'\n\nimport { remapPixelColours } from '../libs/colour-utils'\nimport { convertURIToImageData, scaleImageData } from '../libs/image-utils'\nimport calculateFromImageData from '../libs/lego/calculateOptimalBricks'\nimport { renderImageDataAsLego } from '../libs/renderLego'\nimport cropCanvas from '../libs/crop-canvas'\n\nclass LegoRenderer extends Component {\n  // state = {\n  //   // dimensions: {\n  //   //   width: -1,\n  //   //   height: -1,\n  //   // },\n  //   // sourceData,\n  //   // originalImageData,\n  // }\n\n  constructor(props) {\n    super(props)\n    if (props && props.sourceData) {\n      this.updateCanvas()\n    }\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount')\n    this.updateCanvas()\n  }\n\n  // componentDidUpdate() {\n  //   this.updateCanvas()\n  // }\n\n  componentDidUpdate(prevProps) {\n    // console.log(\n    //   'componentDidUpdate',\n    //   this.props.sourceData !== prevProps.sourceData\n    // )\n    // if (this.props.sourceData !== prevProps.sourceData) {\n    this.updateCanvas()\n    // }\n  }\n\n  updateCanvas() {\n    // console.log('updateCanvas', this.props.sourceData)\n    if (!this.props.sourceData) {\n      console.error('sourceData is undefined')\n      return\n    }\n    convertURIToImageData(this.props.sourceData).then(originalImageData => {\n      // setImageData(originalImageData);\n      // console.log('stuff')\n\n      let { imageData } = remapPixelColours(originalImageData)\n\n      // this.setState({\n      //   dimensions: {\n      //     width: originalImageData.width * pixelScaler,\n      //     height: originalImageData.height * pixelScaler,\n      //   },\n      // })\n\n      // const croppedImage = cropCanvas(imageData)\n      // if (imageData) {\n      // const calculator = new CalculateOptimalBricks()\n\n      // if (imageData) {\n      if (!imageData) return\n      this.refs.offscreen_canvas.width = imageData.width\n      this.refs.offscreen_canvas.height = imageData.height\n      // this.drawImageData(this.refs.offscreen_canvas, imageData)\n      const ctx = this.refs.offscreen_canvas.getContext('2d')\n      ctx.imageSmoothingEnabled = false\n\n      const scaledImageData = scaleImageData(ctx, imageData, 1)\n      ctx.putImageData(scaledImageData, 0, 0)\n      // }\n\n      // this.drawImageData(this.refs.canvas, imageData)\n      // this.drawImageData(this.refs.original_canvas, originalImageData)\n\n      // this.drawImageData(this.refs.offscreen_canvas, imageData)\n      // this.refs.offscreen_canvas.getContext('2d').putImageData(imageData, 0, 0)\n      const cropped = cropCanvas(this.refs.offscreen_canvas)\n      // console.log(cropped.width, cropped.height)\n      // console.log(cropped)\n      const largestValue =\n        cropped.width > cropped.height ? cropped.width : cropped.height\n      const tiles = Math.ceil(largestValue / 32)\n\n      // const optimalData = calculateFromImageData(scaledImageData)\n      const optimalData = calculateFromImageData(cropped)\n      // console.log('optimalData', optimalData)\n\n      renderImageDataAsLego(\n        this.refs.canvas_lego,\n        // this.props.height,\n        // 264,\n        optimalData,\n        32 * tiles,\n        32 * tiles,\n        Math.floor((32 * tiles - cropped.width) / 2),\n        Math.floor((32 * tiles - cropped.height) / 2)\n        // this.props.width,s\n        // this.props.height\n      )\n      // }\n    })\n    // .catch(e => {\n    //   console.error(e)\n    // })\n  }\n\n  drawImageData(canvas, imageData) {\n    // console.log('drawImageData')\n    // const canvas =\n    const ctx = canvas.getContext('2d')\n    ctx.imageSmoothingEnabled = false\n    // let imageData = originalImageData\n\n    const pixelScaler = Math.floor(this.props.width / imageData.width)\n    // const pixelScaler = this.props.width / imageData.width\n\n    // console.log('pixelScaler', pixelScaler)\n\n    // this.setState({\n    //   dimensions: {\n    //     width: imageData.width * pixelScaler,\n    //     height: imageData.height * pixelScaler,\n    //   },\n    // })\n\n    const scaledImageData = scaleImageData(ctx, imageData, pixelScaler)\n\n    ctx.putImageData(scaledImageData, 0, 0)\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <canvas\n          style={{ position: 'absolute', background: 'red', display: 'none' }}\n          width={96}\n          height={96}\n          ref=\"offscreen_canvas\"\n        />\n        <div className=\"wrapper\">\n          <canvas\n            ref=\"canvas_lego\"\n            width={this.props.width}\n            height={this.props.width}\n          />\n          {/* <canvas\n            ref=\"canvas\"\n            width={this.props.width}\n            height={this.props.width}\n          />\n          <canvas\n            ref=\"original_canvas\"\n            width={this.props.width}\n            height={this.props.width}\n          /> */}\n          <style>{`\n          div.wrapper {\n            display: flex;\n            flex: 1;\n            justify-content: center;\n            flex-direction: column;\n          }\n\n          .wrapper canvas {\n            width: 48vw;\n            height: 48vw;\n            margin: 0 auto;\n            background: white;\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.7);\n          }\n        `}</style>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  // console.log('imageURL', state)\n  // console.log('props: ', props)\n  return {\n    ...props,\n    sourceData: state.imageURL,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  // console.log(dispatch);\n  return {\n    // sourceData:\n    // addCount: bindActionCreators(addCount, dispatch)\n    // setImageData: bindActionCreators(setImageData, dispatch),\n  }\n}\n\n// export default connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(MeasureIt()(LegoRenderer))\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  withContentRect('bounds')(\n    ({ measureRef, measure, contentRect, ...props }) => {\n      // console.log('contentRect.bounds', contentRect.bounds)\n      // console.log('props', props)\n      return (\n        <div ref={measureRef}>\n          <LegoRenderer {...props} {...contentRect.bounds} />\n        </div>\n      )\n    }\n  )\n)\n\n// export default MeasureIt()(LegoRenderer);\n","export default function cropImageFromCanvas(canvas) {\n  const ctx = canvas.getContext('2d')\n  let w = canvas.width\n  let h = canvas.height\n  let pix = { x: [], y: [] }\n\n  if (!canvas.width || !canvas.height) return\n  let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  let x\n  let y\n  let index\n\n  for (y = 0; y < h; y++) {\n    for (x = 0; x < w; x++) {\n      index = (y * w + x) * 4\n      if (imageData.data[index + 3] > 0) {\n        pix.x.push(x)\n        pix.y.push(y)\n      }\n    }\n  }\n  pix.x.sort(function(a, b) {\n    return a - b\n  })\n  pix.y.sort(function(a, b) {\n    return a - b\n  })\n  var n = pix.x.length - 1\n\n  w = pix.x[n] - pix.x[0] + 1\n  h = pix.y[n] - pix.y[0] + 1\n  if (pix.x[0] > 0) {\n    x = pix.x[0] - 1\n    w += 2\n  } else {\n    x = 0\n  }\n  if (pix.y[0] > 0) {\n    y = pix.y[0] - 1\n    h += 2\n  } else {\n    y = 0\n  }\n\n  if (!w || !h) return\n  var cut = ctx.getImageData(x, y, w, h)\n\n  return cut\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport LegoRenderer from '../components/LegoRenderer'\n\n// const imageData = require('../images/sprites/pokemon/3.png')\n// console.log(imageData)\n\nconst IndexPage = () => {\n  // console.log('imageData', imageData)\n  return (\n    <Layout>\n      <LegoRenderer /*sourceData={imageData}*/ />\n      {/* <h1>Hi people</h1>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <Link to=\"/page-2/\">Go to page 2</Link> */}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { connect } from 'react-redux'\n\nconst Header = ({ siteTitle, pokemonid, setPokemon }) => (\n  <div\n    style={{\n      background: '#D11013',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      {pokemonid}\n      <button onClick={() => setPokemon(parseInt(pokemonid, 10) + 1)}>\n        Next\n      </button>\n      <button onClick={() => setPokemon(parseInt(pokemonid, 10) - 1)}>\n        Prev\n      </button>\n    </div>\n  </div>\n)\n\nexport default connect(\n  (state, props) => {\n    return {\n      pokemonid: state.pokemonid,\n    }\n  },\n  dispatch => {\n    return {\n      setPokemon: id => {\n        // console.log(id)\n        dispatch({\n          type: 'SET_POKEMON',\n          payload: {\n            id,\n          },\n        })\n      },\n    }\n  }\n)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport ImageUpload from './ImageUpload'\n\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            // background: '#999999',\n          }}\n        >\n          {/* <ImageUpload /> */}\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { Component } from 'react'\n\nexport default class ImageUpload extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      file: '',\n      imagePreviewUrl: '',\n    }\n    this._handleImageChange = this._handleImageChange.bind(this)\n    this._handleSubmit = this._handleSubmit.bind(this)\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault()\n    // TODO: do something with -> this.state.file\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault()\n\n    let reader = new FileReader()\n    let file = e.target.files[0]\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      })\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  render() {\n    let { imagePreviewUrl } = this.state\n    let $imagePreview = null\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} width=\"100\" alt=\"\" />\n    }\n\n    return (\n      <div>\n        <form onSubmit={this._handleSubmit}>\n          <input type=\"file\" onChange={this._handleImageChange} />\n          <button type=\"submit\" onClick={this._handleSubmit}>\n            Upload Image\n          </button>\n        </form>\n        {$imagePreview}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}