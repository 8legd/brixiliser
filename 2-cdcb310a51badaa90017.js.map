{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Header.jsx","webpack:///./src/components/Layout/index.jsx","webpack:///./src/components/ImageUpload.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/libs/available-lego-brick-colours.js","webpack:///./src/libs/colour-utils.js","webpack:///./src/libs/image-utils.js","webpack:///./src/libs/lego/data/available-lego-brick-colours.js","webpack:///./src/libs/lego/colour-interpolate.js","webpack:///./src/libs/lego/dimensions.js","webpack:///./src/libs/lego/calculateOptimalBricks.js","webpack:///./src/libs/renderLego.js","webpack:///./src/components/LegoRenderer.jsx","webpack:///./src/libs/crop-canvas.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","object","string","isRequired","func","m","module","exports","default","components_Header","Object","es","state","pokemonid","dispatch","setPokemon","id","type","payload","_ref","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","onClick","parseInt","Layout_Layout","react","Helmet_default","title","site","siteMetadata","meta","name","content","lang","_755544856","prop_types_default","node","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","uniqueColours","available_lego_brick_colours_uniqueColours","plates","map","plate","indexOf","push","toLowerCase","available_lego_brick_colours","colours","filter","colour","DeltaE","h2r","hex","result","exec","rgb2lab","rgb","x","y","z","g","b","Math","pow","labpalette","obj","getHex","toString","slice","mapColorToPalette","red","green","blue","diffDistance","mappedColor","lab","distance","i","length","inputColour","getDeltaE94","L","A","B","max","min","scaleImageData","ctx","imageData","scale","scaled","createImageData","width","height","subLine","row","col","sourcePixel","subarray","set","destRow","destCol","data_available_lego_brick_colours_uniqueColours","data_plates","available_lego_brick_colours_getUniqueColours","data_available_lego_brick_colours","data_colours","colour_interpolate_DeltaE","colour_interpolate_h2r","r2h","colour_interpolate_labpalette","colour_interpolate_rgb2lab","colour_interpolate_mapColorToPalette","colour_interpolate_lab2rgb","getNextBestColourMatch","exclusions","testPalette","colourAsHex","findIndex","ecol","input","getDeltaE00","lego_dimensions","brick","test","Name","matches","undefined","calculateOptimalBricks","currentColour","originalImageData","orientation","outputBricks","Uint8ClampedArray","topLeftPixelValue","topLeftAlpha","alpha","isTransparentBlock","ignore","index","floor","mergeBlocks","thisBrick","brickColour","brickSizes","getBrickSizesForColour","l","hbrickFit","genericBrickFit","fits","blocks","vbrickFit","mergeSingles","maxCount","ignoreSmallOnes","dimension","sort","reverse","sourceBrickIndex","additionalBricks","nextColBrick","j","jl","nextLineBrick","concat","every","val","values","checkInvalidPixels","invalidCount","hasSinglePixelBlock","excludedColours","spacer","drawStuds","brickSize","xCount","yCount","beginPath","arc","PI","fill","stroke","closePath","LegoRenderer_LegoRenderer","LegoRenderer","_this","_Component","call","this","sourceData","updateCanvas","componentDidMount","componentDidUpdate","URI","_this2","_this$props","Promise","resolve","reject","canvas","document","context","getContext","image","Image","addEventListener","drawImage","getImageData","src","then","mapping","mappedColour","remapPixelColours","refs","offscreen_canvas","imageSmoothingEnabled","scaledImageData","putImageData","cropped","w","h","pix","cropImageFromCanvas","largestValue","tiles","ceil","optimalData","outputCanvas","optimalBricks","imageWidth","imageHeight","offsetX","offsetY","outputContext","clearRect","lineWidth","fillStyle","drawTile","fillRect","strokeRect","strokeStyle","color_default","lighten","xPos","yPos","renderImageDataAsLego","canvas_lego","catch","e","console","error","drawImageData","pixelScaler","_this$props2","className","position","display","ref","oneOf","number","defaultProps","react_measure","measureRef","contentRect","measure","objectWithoutPropertiesLoose_default","bounds"],"mappings":"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","file":"2-cdcb310a51badaa90017.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { connect } from 'react-redux'\n\nconst Header = ({ siteTitle, pokemonid, setPokemon }) => (\n  <div\n    style={{\n      background: '#D11013',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      {pokemonid}\n      <button onClick={() => setPokemon(parseInt(pokemonid, 10) + 1)}>\n        Next\n      </button>\n      <button onClick={() => setPokemon(parseInt(pokemonid, 10) - 1)}>\n        Prev\n      </button>\n    </div>\n  </div>\n)\n\nexport default connect(\n  (state, props) => {\n    return {\n      pokemonid: state.pokemonid,\n    }\n  },\n  dispatch => {\n    return {\n      setPokemon: id => {\n        dispatch({\n          type: 'SET_POKEMON',\n          payload: {\n            id,\n          },\n        })\n      },\n    }\n  }\n)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from '../Header'\nimport ImageUpload from '../ImageUpload'\n\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            // background: '#999999',\n          }}\n        >\n          {/* <ImageUpload /> */}\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { Component } from 'react'\n\nexport default class ImageUpload extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      file: '',\n      imagePreviewUrl: '',\n    }\n    this._handleImageChange = this._handleImageChange.bind(this)\n    this._handleSubmit = this._handleSubmit.bind(this)\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault()\n    // TODO: do something with -> this.state.file\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault()\n\n    let reader = new FileReader()\n    let file = e.target.files[0]\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      })\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  render() {\n    let { imagePreviewUrl } = this.state\n    let $imagePreview = null\n    if (imagePreviewUrl) {\n      $imagePreview = <img src={imagePreviewUrl} width=\"100\" alt=\"\" />\n    }\n\n    return (\n      <div>\n        <form onSubmit={this._handleSubmit}>\n          <input type=\"file\" onChange={this._handleImageChange} />\n          <button type=\"submit\" onClick={this._handleSubmit}>\n            Upload Image\n          </button>\n        </form>\n        {$imagePreview}\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import platesData from '../data/plates.json'\nimport colours from '../data/colours.json'\n\nconst uniqueColours = getUniqueColours()\n\nconst filteredColours = colours.filter(colour => {\n  return uniqueColours.indexOf(colour.name.toLowerCase()) !== -1\n})\n\nexport default filteredColours\n\nfunction getUniqueColours() {\n  let uniqueColours = []\n  platesData.map(plate => {\n    if (uniqueColours.indexOf(plate['Exact Colour'] !== -1)) {\n      uniqueColours.push(plate['Exact Colour'].toLowerCase())\n    }\n  })\n  return uniqueColours\n}\n","import legoPalette from './available-lego-brick-colours'\n\nconst DeltaE = require('delta-e')\n\nexport const h2r = hex => {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null\n}\n\nexport const lab2rgb = lab => {\n  var y = (lab[0] + 16) / 116,\n    x = lab[1] / 500 + y,\n    z = y - lab[2] / 200,\n    r,\n    g,\n    b\n\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787)\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787)\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787)\n\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415\n  b = x * 0.0557 + y * -0.204 + z * 1.057\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b\n\n  return [\n    Math.max(0, Math.min(1, r)) * 255,\n    Math.max(0, Math.min(1, g)) * 255,\n    Math.max(0, Math.min(1, b)) * 255,\n  ]\n}\n\nexport const rgb2lab = rgb => {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    x,\n    y,\n    z\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  return [116 * y - 16, 500 * (x - y), 200 * (y - z)]\n}\n\nconst palette = legoPalette.map(obj => {\n  let rgb = h2r(obj.hex)\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n  }\n})\n\nconst labpalette = legoPalette.map(obj => {\n  let rgb = rgb2lab(h2r(obj.hex))\n  return rgb\n})\n\nexport const getHex = (r, g, b) => {\n  return '#' + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7)\n}\n\nexport const remapPixelColours = originalImageData => {\n  let mapping = {}\n\n  let imageData = {\n    width: originalImageData.width,\n    height: originalImageData.height,\n    data: new Uint8ClampedArray(originalImageData.data),\n  }\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    let mappedColour = mapColorToPalette(\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2]\n    )\n    if (\n      !mapping[\n        getHex(imageData.data[i], imageData.data[i + 1], imageData.data[i + 2])\n      ]\n    ) {\n      mapping[\n        getHex(imageData.data[i], imageData.data[i + 1], imageData.data[i + 2])\n      ] = getHex(mappedColour.r, mappedColour.g, mappedColour.b)\n    }\n    imageData.data[i] = mappedColour.r\n    imageData.data[i + 1] = mappedColour.g\n    imageData.data[i + 2] = mappedColour.b\n  }\n\n  // console.log(imageData, mapping)\n  return { imageData, mapping }\n}\n\nexport const mapColorToPalette = (red, green, blue) => {\n  // console.log(r2h([red, green, blue]))\n  // return nearestColor(r2h([red, green, blue]))\n  let color, diffR, diffG, diffB, diffDistance, mappedColor\n  let distance = 25000\n  for (let i = 0; i < labpalette.length; i++) {\n    color = labpalette[i]\n    // diffR = (color.r - red)\n    // diffG = (color.g - green)\n    // diffB = (color.b - blue)\n    // diffDistance = diffR * diffR + diffG * diffG + diffB * diffB\n    let inputColour = rgb2lab([red, green, blue])\n    diffDistance = DeltaE.getDeltaE94(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: inputColour[0], A: inputColour[1], B: inputColour[2] }\n    )\n    // console.log(color, red, green, blue, diffDistance)\n    if (diffDistance < distance) {\n      distance = diffDistance\n      mappedColor = lab2rgb(labpalette[i])\n    }\n  }\n  return {\n    r: mappedColor[0],\n    g: mappedColor[1],\n    b: mappedColor[2],\n  }\n}\n","export const convertURIToImageData = URI => {\n  return new Promise(function(resolve, reject) {\n    if (URI == null) return reject()\n    var canvas = document.createElement('canvas'),\n      context = canvas.getContext('2d'),\n      image = new Image()\n    image.addEventListener(\n      'load',\n      function() {\n        canvas.width = image.width\n        canvas.height = image.height\n        context.drawImage(this, 0, 0, canvas.width, canvas.height)\n        resolve(context.getImageData(0, 0, canvas.width, canvas.height))\n      },\n      false\n    )\n    image.src = URI\n  })\n}\n\nexport const scaleImageData = (ctx, imageData, scale) => {\n  var scaled = ctx.createImageData(\n    imageData.width * scale,\n    imageData.height * scale\n  )\n  var subLine = ctx.createImageData(scale, 1).data\n  for (var row = 0; row < imageData.height; row++) {\n    for (var col = 0; col < imageData.width; col++) {\n      var sourcePixel = imageData.data.subarray(\n        (row * imageData.width + col) * 4,\n        (row * imageData.width + col) * 4 + 4\n      )\n      for (var x = 0; x < scale; x++) subLine.set(sourcePixel, x * 4)\n      for (var y = 0; y < scale; y++) {\n        var destRow = row * scale + y\n        var destCol = col * scale\n        scaled.data.set(subLine, (destRow * scaled.width + destCol) * 4)\n      }\n    }\n  }\n\n  return scaled\n}\n","import platesData from './plates.json'\nimport colours from './colours.json'\n\nconst uniqueColours = getUniqueColours()\n\nconst filteredColours = colours.filter(colour => {\n  return uniqueColours.indexOf(colour.name.toLowerCase()) !== -1\n})\n\nexport default filteredColours\n\nfunction getUniqueColours() {\n  let uniqueColours = []\n  platesData.map(plate => {\n    if (uniqueColours.indexOf(plate['Exact Colour'] !== -1)) {\n      uniqueColours.push(plate['Exact Colour'].toLowerCase())\n    }\n  })\n  return uniqueColours\n}\n","import legoPalette from './data/available-lego-brick-colours'\n\nvar DeltaE = require('delta-e')\n\n// Converts a #ffffff hex string into an [r,g,b] array\nexport function h2r(hex) {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result\n    ? [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16),\n      ]\n    : null\n}\n\n// Inverse of the above\nexport function r2h(rgb) {\n  // return '#' + ((1 << 24) + (rgb[0] << 16) + (rgb[1] << 8) + rgb[2]).toString(16).slice(1)\n  // rgb = rgb.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/)\n  function hex(x) {\n    return ('0' + parseInt(x).toString(16)).slice(-2)\n  }\n  return '#' + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2])\n}\n\n// Interpolates two [r,g,b] colors and returns an [r,g,b] of the result\n// Taken from the awesome ROT.js roguelike dev library at\n// https://github.com/ondras/rot.js\nexport function _interpolateColor(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5\n  }\n  let result = color1.slice()\n  for (let i = 0; i < 3; i++) {\n    result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]))\n  }\n  return result\n}\n\nexport function rgb2hsl(color) {\n  let r = color[0] / 255\n  let g = color[1] / 255\n  let b = color[2] / 255\n\n  let max = Math.max(r, g, b),\n    min = Math.min(r, g, b)\n  let h,\n    s,\n    l = (max + min) / 2\n\n  if (max == min) {\n    h = s = 0 // achromatic\n  } else {\n    let d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  return [h, s, l]\n}\n\nexport function hsl2rgb(color) {\n  let l = color[2]\n\n  if (color[1] == 0) {\n    l = Math.round(l * 255)\n    return [l, l, l]\n  } else {\n    function hue2rgb(p, q, t) {\n      if (t < 0) {\n        t += 1\n      }\n      if (t > 1) {\n        t -= 1\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t\n      }\n      if (t < 1 / 2) {\n        return q\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6\n      }\n      return p\n    }\n\n    let s = color[1]\n    let q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    let p = 2 * l - q\n    let r = hue2rgb(p, q, color[0] + 1 / 3)\n    let g = hue2rgb(p, q, color[0])\n    let b = hue2rgb(p, q, color[0] - 1 / 3)\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)]\n  }\n}\n\nexport function _interpolateHSL(color1, color2, factor) {\n  if (arguments.length < 3) {\n    factor = 0.5\n  }\n  let hsl1 = rgb2hsl(color1)\n  let hsl2 = rgb2hsl(color2)\n  for (let i = 0; i < 3; i++) {\n    hsl1[i] += factor * (hsl2[i] - hsl1[i])\n  }\n  return hsl2rgb(hsl1)\n}\n\nconst palette = legoPalette.map(obj => {\n  let rgb = h2r(obj.hex)\n  return {\n    r: rgb[0],\n    g: rgb[1],\n    b: rgb[2],\n  }\n})\n\nconst labpalette = legoPalette.map(obj => {\n  let rgb = rgb2lab(h2r(obj.hex))\n  return rgb\n})\n\n// var nearestColor = require('nearest-color').from(palette.map((c) => {\n//   return r2h([c.r, c.g, c.b])\n// }))\n// use Euclidian distance to find closest color\n// send in the rgb of the pixel to be substituted\nexport function mapColorToPalette(red, green, blue) {\n  // console.log(r2h([red, green, blue]))\n  // return nearestColor(r2h([red, green, blue]))\n  let color, diffR, diffG, diffB, diffDistance, mappedColor\n  let distance = 25000\n  for (let i = 0; i < labpalette.length; i++) {\n    color = labpalette[i]\n    // diffR = (color.r - red)\n    // diffG = (color.g - green)\n    // diffB = (color.b - blue)\n    // diffDistance = diffR * diffR + diffG * diffG + diffB * diffB\n    let inputColour = rgb2lab([red, green, blue])\n    diffDistance = DeltaE.getDeltaE94(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: inputColour[0], A: inputColour[1], B: inputColour[2] }\n    )\n    // console.log(color, red, green, blue, diffDistance)\n    if (diffDistance < distance) {\n      distance = diffDistance\n      mappedColor = lab2rgb(labpalette[i])\n    }\n  }\n  return {\n    r: mappedColor[0],\n    g: mappedColor[1],\n    b: mappedColor[2],\n  }\n}\n\n/**\n * Takes a colour and finds its nearest not-matching colour.\n * @param {string} inputColour\n */\nexport function getNextBestColourMatch(inputColour, exclusions) {\n  let color, diffDistance, mappedColor\n  let distance = 25000\n  // let exclusionsAsLab = exclusions.map(colour => {\n  //   return rgb2lab(h2r(colour))\n  // })\n\n  let testPalette = labpalette.filter(colour => {\n    let colourAsHex = r2h(lab2rgb(colour))\n    let index = exclusions.findIndex(ecol => {\n      // return ecol[0] === colour[0] && ecol[1] === colour[1] && ecol[2] === colour[2]\n      return ecol === colourAsHex\n    })\n    return index === -1\n  })\n\n  for (let i = 0; i < testPalette.length; i++) {\n    color = testPalette[i]\n    let input = rgb2lab(h2r(inputColour))\n    diffDistance = DeltaE.getDeltaE00(\n      { L: color[0], A: color[1], B: color[2] },\n      { L: input[0], A: input[1], B: input[2] }\n    )\n    if (diffDistance < distance && diffDistance > 0) {\n      distance = diffDistance\n      mappedColor = lab2rgb(testPalette[i])\n    }\n  }\n  // console.log(diffDistance)\n  return r2h(mappedColor)\n}\n\nexport function lab2rgb(lab) {\n  var y = (lab[0] + 16) / 116,\n    x = lab[1] / 500 + y,\n    z = y - lab[2] / 200,\n    r,\n    g,\n    b\n\n  x = 0.95047 * (x * x * x > 0.008856 ? x * x * x : (x - 16 / 116) / 7.787)\n  y = 1.0 * (y * y * y > 0.008856 ? y * y * y : (y - 16 / 116) / 7.787)\n  z = 1.08883 * (z * z * z > 0.008856 ? z * z * z : (z - 16 / 116) / 7.787)\n\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415\n  b = x * 0.0557 + y * -0.204 + z * 1.057\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : 12.92 * r\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : 12.92 * g\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : 12.92 * b\n\n  return [\n    Math.max(0, Math.min(1, r)) * 255,\n    Math.max(0, Math.min(1, g)) * 255,\n    Math.max(0, Math.min(1, b)) * 255,\n  ]\n}\n\nexport function rgb2lab(rgb) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    x,\n    y,\n    z\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n  x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047\n  y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.0\n  z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116\n\n  return [116 * y - 16, 500 * (x - y), 200 * (y - z)]\n}\n\n// calculate the perceptual distance between colors in CIELAB\n// https://github.com/THEjoezack/ColorMine/blob/master/ColorMine/ColorSpaces/Comparisons/Cie94Comparison.cs\n\n// export function deltaE (labA, labB) {\n//   var deltaL = labA[0] - labB[0]\n//   var deltaA = labA[1] - labB[1]\n//   var deltaB = labA[2] - labB[2]\n//   var c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2])\n//   var c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2])\n//   var deltaC = c1 - c2\n//   var deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC\n//   deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH)\n//   var sc = 1.0 + 0.045 * c1\n//   var sh = 1.0 + 0.015 * c1\n//   var deltaLKlsl = deltaL / (1.0)\n//   var deltaCkcsc = deltaC / (sc)\n//   var deltaHkhsh = deltaH / (sh)\n//   var i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh\n//   return i < 0 ? 0 : Math.sqrt(i)\n// }\n\nfunction padToTwo(numberString) {\n  if (numberString.length < 2) {\n    numberString = '0' + numberString\n  }\n  return numberString\n}\n\nexport function hexAverage() {\n  var args = Array.prototype.slice.call(arguments)\n  // console.log(args, arguments)\n  return args\n    .reduce(\n      function(previousValue, currentValue) {\n        return currentValue\n          .replace(/^#/, '')\n          .match(/.{2}/g)\n          .map(function(value, index) {\n            return previousValue[index] + parseInt(value, 16)\n          })\n      },\n      [0, 0, 0]\n    )\n    .reduce(function(previousValue, currentValue) {\n      return (\n        previousValue +\n        padToTwo(Math.floor(currentValue / args.length).toString(16))\n      )\n    }, '#')\n}\n","import platesData from './data/plates.json'\nimport coloursData from './data/available-lego-brick-colours'\n\nconst dimensions = platesData\n  .filter(brick => {\n    return /^PLATE\\s([0-9]*)X([0-9]*)$/gi.test(brick.Name)\n  })\n  .map(brick => {\n    let matches = /^PLATE\\s([0-9]*)X([0-9]*)$/gi.exec(brick.Name)\n    let data = coloursData.filter(colour => {\n      return brick['Exact Colour'].toLowerCase() === colour.name.toLowerCase()\n    })[0]\n    let hex = data !== undefined ? data.hex : undefined\n    return [matches[1], matches[2], hex]\n  })\n\nexport default dimensions\n","import {\n  r2h,\n  getNextBestColourMatch,\n  mapColorToPalette,\n} from './colour-interpolate'\nimport dimensions from './dimensions'\n\nconst calculateFromImageData = ({\n  imageData: originalImageData,\n  orientation,\n}) => {\n  let currentColour\n  const outputBricks = []\n\n  const imageData = {\n    width: originalImageData.width,\n    height: originalImageData.height,\n    data: new Uint8ClampedArray(originalImageData.data),\n  }\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    const color = mapColorToPalette(\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2]\n    )\n    imageData.data[i] = color.r\n    imageData.data[i + 1] = color.g\n    imageData.data[i + 2] = color.b\n  }\n\n  const topLeftPixelValue = r2h([\n    imageData.data[0],\n    imageData.data[1],\n    imageData.data[2],\n  ])\n  const topLeftAlpha = imageData.data[3]\n\n  for (var i = 0; i < imageData.data.length; i += 4) {\n    currentColour = r2h([\n      imageData.data[i],\n      imageData.data[i + 1],\n      imageData.data[i + 2],\n    ])\n    const alpha = imageData.data[i + 3]\n\n    const isTransparentBlock =\n      alpha !== 255 ||\n      (currentColour === topLeftPixelValue && alpha === topLeftAlpha)\n    if (isTransparentBlock) {\n      currentColour = undefined\n    }\n\n    outputBricks.push({\n      colour: currentColour,\n      ignore: !!isTransparentBlock,\n      index: i,\n    })\n  }\n\n  for (let i = 0; i < outputBricks.length; i++) {\n    if (outputBricks[i]) {\n      outputBricks[i].x = i % imageData.width\n      outputBricks[i].y = Math.floor(i / imageData.width)\n      outputBricks[i].width = 1\n      outputBricks[i].height = 1\n    }\n  }\n\n  function mergeBlocks(outputBricks) {\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      const thisBrick = outputBricks[i]\n      const brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        const brickSizes = getBrickSizesForColour(brickColour, true)\n\n        for (let a = 0, l = brickSizes.length; a < l; a++) {\n          let hbrickFit = genericBrickFit(i, brickSizes[a][1], brickSizes[a][0])\n          // let vbrickFit = genericBrickFit(i, brickSizes[a][0], brickSizes[a][1])\n          if (hbrickFit.fits) {\n            thisBrick.width = brickSizes[a][1]\n            thisBrick.height = brickSizes[a][0]\n            hbrickFit.blocks.map(brick => {\n              // brick.colour = undefined\n              brick.ignore = true\n              // brick.width = 0\n              // brick.height = 0\n            })\n            break\n          }\n        }\n\n        if (orientation === 'topDown') {\n          for (let a = 0, l = brickSizes.length; a < l; a++) {\n            let vbrickFit = genericBrickFit(\n              i,\n              brickSizes[a][0],\n              brickSizes[a][1]\n            )\n            if (vbrickFit.fits) {\n              thisBrick.width = brickSizes[a][0]\n              thisBrick.height = brickSizes[a][1]\n              vbrickFit.blocks.map(brick => {\n                // brick.colour = undefined\n                brick.ignore = true\n                // brick.width = 0\n                // brick.height = 0\n              })\n              break\n            }\n          }\n        }\n      }\n    }\n\n    mergeSingles(outputBricks)\n  }\n\n  mergeBlocks(outputBricks)\n\n  let maxCount = 0\n  checkInvalidPixels()\n\n  mergeBlocks(outputBricks)\n  // mergeSingles(outputBricks)\n\n  function checkInvalidPixels() {\n    maxCount++\n    let invalidCount = 0\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      const thisBrick = outputBricks[i]\n      const brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        const brickSizes = getBrickSizesForColour(brickColour, false)\n        const hasSinglePixelBlock =\n          brickSizes.filter(brick => {\n            return parseInt(brick[0], 10) === 1 && parseInt(brick[1], 10) === 1\n          }).length > 0\n\n        if (\n          parseInt(thisBrick.width, 10) === 1 &&\n          parseInt(thisBrick.height, 10) === 1 &&\n          !hasSinglePixelBlock\n        ) {\n          // todo: find the next nearest mapping for this colour\n          // thisBrick.colour = '#ff00ff'// getNextBestColourMatch(thisBrick.colour)\n          if (!outputBricks[i].excludedColours) {\n            outputBricks[i].excludedColours = []\n          }\n          // console.log('outputBricks[i].excludedColours = ', outputBricks[i].excludedColours)\n          // console.log(thisBrick)\n          outputBricks[i].excludedColours.push(thisBrick.colour)\n          thisBrick.colour = getNextBestColourMatch(\n            r2h([\n              originalImageData.data[thisBrick.index],\n              originalImageData.data[thisBrick.index + 1],\n              originalImageData.data[thisBrick.index + 2],\n            ]),\n            outputBricks[i].excludedColours\n          )\n          invalidCount++\n          // todo: re-run the pixel analysis from scratch with new imagedata\n        }\n      }\n    }\n    if (invalidCount > 0) {\n      // console.log(invalidCount, 'pixels invalid')\n      if (maxCount < 10) {\n        // mergeSingles(outputBricks)\n        checkInvalidPixels()\n      }\n      // } else {\n      //   console.log('all pixels okay!')\n    }\n  }\n\n  function getBrickSizesForColour(colour, ignoreSmallOnes) {\n    return dimensions\n      .filter(dimension => dimension[2] === colour)\n      .filter(dimension => {\n        const width = parseInt(dimension[0], 10)\n        const height = parseInt(dimension[1], 10)\n        if (ignoreSmallOnes) {\n          return width > 1 && height > 1\n        }\n        return width === 1 || height === 1\n      })\n      .sort((a, b) => parseInt(a[0], 10) - parseInt(b[0], 10))\n      .reverse()\n  }\n\n  function mergeSingles(outputBricks) {\n    for (let i = 0; i < outputBricks.length - 1; i++) {\n      const thisBrick = outputBricks[i]\n      const brickColour = thisBrick.colour\n      if (!thisBrick.ignore) {\n        if (thisBrick.width === 1 && thisBrick.height === 1) {\n          const brickSizes = getBrickSizesForColour(brickColour, false)\n\n          for (let a = 0, l = brickSizes.length; a < l; a++) {\n            const hbrickFit = genericBrickFit(\n              i,\n              brickSizes[a][1],\n              brickSizes[a][0]\n            )\n            if (hbrickFit.fits) {\n              thisBrick.width = brickSizes[a][1]\n              thisBrick.height = brickSizes[a][0]\n              // thisBrick.ignore = false\n              // console.log(hbrickFit.blocks.length)\n              hbrickFit.blocks.map(brick => {\n                // brick.colour = undefined\n                brick.ignore = true\n                // brick.width = 0\n                // brick.height = 0\n              })\n              break\n            }\n          }\n\n          if (orientation === 'topDown') {\n            for (let a = 0, l = brickSizes.length; a < l; a++) {\n              const vbrickFit = genericBrickFit(\n                i,\n                brickSizes[a][0],\n                brickSizes[a][1]\n              )\n              if (vbrickFit.fits) {\n                thisBrick.width = brickSizes[a][0]\n                thisBrick.height = brickSizes[a][1]\n                // thisBrick.ignore = false\n                // console.log(vbrickFit.blocks.length)\n                vbrickFit.blocks.map(brick => {\n                  // brick.colour = undefined\n                  brick.ignore = true\n                  // brick.width = 0\n                  // brick.height = 0\n                })\n                break\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function genericBrickFit(sourceBrickIndex, width, height) {\n    const thisBrick = outputBricks[sourceBrickIndex]\n    const additionalBricks = []\n    for (let i = 0, l = width; i < l; i++) {\n      if (i !== 0) {\n        const nextColBrick = outputBricks[sourceBrickIndex + i]\n        // if (!nextColBrick) {\n        //   additionalBricks.push(nextColBrick)\n        // }\n        if (nextColBrick) {\n          if (\n            nextColBrick.width === 1 &&\n            nextColBrick.height === 1 &&\n            !nextColBrick.ignore\n          ) {\n            additionalBricks.push(nextColBrick)\n          } else {\n            additionalBricks.push(undefined)\n          }\n        } else {\n          if (!nextColBrick) {\n            additionalBricks.push(nextColBrick)\n          }\n        }\n      }\n\n      for (let j = 1, jl = height; j < jl; j++) {\n        const nextLineBrick =\n          outputBricks[sourceBrickIndex + i + j * imageData.width]\n        // if (!nextLineBrick) {\n        //   additionalBricks.push(nextLineBrick)\n        // }\n        if (nextLineBrick) {\n          if (\n            nextLineBrick.width === 1 &&\n            nextLineBrick.height === 1 &&\n            !nextLineBrick.ignore &&\n            orientation === 'topDown'\n          ) {\n            additionalBricks.push(nextLineBrick)\n          } else {\n            additionalBricks.push(undefined)\n          }\n        } else {\n          if (!nextLineBrick) {\n            additionalBricks.push(nextLineBrick)\n          }\n        }\n      }\n    }\n\n    const remainingDistanceToEdge = imageData.width - (i % imageData.width)\n    if (remainingDistanceToEdge < width) {\n      return {\n        fits: false,\n      }\n    }\n\n    // let unfilteredBricks = additionalBricks.length\n    // console.log(additionalBricks.filter((brick) => { return !brick }).length, unfilteredBricks)\n\n    if (\n      additionalBricks.filter(brick => {\n        return !brick\n      }).length\n    ) {\n      return { fits: false }\n    }\n\n    const values = [].concat(thisBrick, additionalBricks)\n\n    // const colour = values[0].colour\n\n    const yahtzeeQualify = values.every((val, i, values) => {\n      if (!(values[0].width === 1 && values[0].height === 1) || !!val.ignore) {\n        return false\n      }\n      // if ((val.width === 0 && val.height === 0) || val.ignore) {\n      //   return false\n      // }\n      return val.colour === values[0].colour\n    })\n\n    return {\n      fits: yahtzeeQualify,\n      blocks: additionalBricks,\n    }\n  }\n\n  const rtn = outputBricks.filter(brick => !brick.ignore)\n\n  return rtn\n}\n\nexport default calculateFromImageData\n","import Color from 'color'\n\nconst spacer = 0.25\n\nexport default function renderImageDataAsLego({\n  outputCanvas,\n  optimalBricks,\n  imageWidth,\n  imageHeight,\n  offsetX,\n  offsetY,\n  orientation,\n}) {\n  const height = imageWidth < imageHeight ? imageHeight : imageWidth\n  const outputContext = outputCanvas.getContext('2d')\n  outputContext.clearRect(0, 0, outputCanvas.width, outputCanvas.height)\n  const canvas = document.createElement('canvas')\n  canvas.width = outputCanvas.width\n  canvas.height = outputCanvas.height\n  const context = canvas.getContext('2d')\n  const brickSize = outputCanvas.height / height\n\n  context.lineWidth = 0.25\n  context.fillStyle = '#ffffff'\n\n  const drawTile = (row, col) => {\n    const size = 32\n    context.fillRect(\n      size * (row * brickSize),\n      size * (col * brickSize),\n      size * (row + 1) * brickSize,\n      size * (col + 1) * brickSize\n    )\n    context.strokeRect(\n      size * (row * brickSize),\n      size * (col * brickSize),\n      size * (row + 1) * brickSize,\n      size * (col + 1) * brickSize\n    )\n    if (orientation === 'topDown') {\n      drawStuds(context, brickSize, spacer, size * row, size * col, size, size)\n    }\n  }\n\n  drawTile(0, 0)\n  drawTile(0, 1)\n  drawTile(0, 2)\n  drawTile(1, 0)\n  drawTile(1, 1)\n  drawTile(1, 2)\n  drawTile(2, 0)\n  drawTile(2, 1)\n  drawTile(2, 2)\n\n  if (optimalBricks) {\n    for (let i = 0, l = optimalBricks.length; i < l; i++) {\n      // if (!optimalBricks[i].ignore) {\n      const xCount = optimalBricks[i].x + offsetX\n      const yCount = optimalBricks[i].y + offsetY\n      context.fillStyle = optimalBricks[i].colour\n      // if (Color(optimalBricks[i].colour).light()) {\n      context.strokeStyle = '#000000'\n      // } else {\n      //     context.strokeStyle = '#ffffff'\n      // }\n      context.fillRect(\n        xCount * brickSize + spacer,\n        yCount * brickSize + spacer,\n        optimalBricks[i].width * brickSize - spacer * 2,\n        optimalBricks[i].height * brickSize - spacer * 2\n      )\n      context.strokeRect(\n        xCount * brickSize + spacer,\n        yCount * brickSize + spacer,\n        optimalBricks[i].width * brickSize - spacer * 2,\n        optimalBricks[i].height * brickSize - spacer * 2\n      )\n\n      context.fillStyle = Color(optimalBricks[i].colour).lighten(0.1)\n\n      if (orientation === 'topDown') {\n        drawStuds(\n          context,\n          brickSize,\n          spacer,\n          xCount,\n          yCount,\n          optimalBricks[i].width,\n          optimalBricks[i].height\n        )\n      }\n      // }\n    }\n    const ratio = imageWidth / imageHeight\n    const isLandscape = ratio > 1\n    let xPos = 0\n    let yPos = 0\n    if (!isLandscape) {\n      xPos = ((imageHeight - imageWidth) / 2) * (outputCanvas.height / height)\n    } else {\n      yPos = ((imageWidth - imageHeight) / 2) * (outputCanvas.height / height)\n    }\n    outputContext.drawImage(canvas, xPos, yPos)\n  }\n}\n\nfunction drawStuds(ctx, brickSize, spacer, xCount, yCount, width, height) {\n  for (var i = 0, l = width; i < l; i++) {\n    for (var j = 0, jl = height; j < jl; j++) {\n      ctx.beginPath()\n      ctx.arc(\n        (xCount + i) * brickSize + -spacer / 2 + brickSize / 2,\n        (yCount + j) * brickSize + -spacer / 2 + brickSize / 2,\n        brickSize * 0.3,\n        0,\n        2 * Math.PI\n      )\n      ctx.fill()\n      ctx.stroke()\n      ctx.closePath()\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withContentRect } from 'react-measure'\n\nimport { remapPixelColours } from '../libs/colour-utils'\nimport { convertURIToImageData, scaleImageData } from '../libs/image-utils'\nimport calculateFromImageData from '../libs/lego/calculateOptimalBricks'\nimport renderImageDataAsLego from '../libs/renderLego'\nimport cropCanvas from '../libs/crop-canvas'\n\nclass LegoRenderer extends Component {\n  constructor(props) {\n    super(props)\n    if (props && props.sourceData) {\n      this.updateCanvas()\n    }\n  }\n\n  componentDidMount() {\n    this.updateCanvas()\n  }\n\n  componentDidUpdate() {\n    this.updateCanvas()\n  }\n\n  updateCanvas() {\n    const { sourceData, orientation } = this.props\n\n    if (!sourceData) {\n      console.error('sourceData is undefined')\n      return\n    }\n\n    convertURIToImageData(sourceData)\n      .then(originalImageData => {\n        const { imageData } = remapPixelColours(originalImageData)\n        if (!imageData) throw new Error('No Image Data is defined')\n\n        this.refs.offscreen_canvas.width = imageData.width\n        this.refs.offscreen_canvas.height = imageData.height\n\n        const ctx = this.refs.offscreen_canvas.getContext('2d')\n        ctx.imageSmoothingEnabled = false\n\n        const scaledImageData = scaleImageData(ctx, imageData, 1)\n        ctx.putImageData(scaledImageData, 0, 0)\n\n        const cropped = cropCanvas(this.refs.offscreen_canvas)\n\n        const largestValue =\n          cropped.width > cropped.height ? cropped.width : cropped.height\n        const tiles = Math.ceil(largestValue / 32)\n\n        const optimalData = calculateFromImageData({\n          imageData: cropped,\n          orientation,\n        })\n\n        renderImageDataAsLego({\n          outputCanvas: this.refs.canvas_lego,\n          optimalBricks: optimalData,\n          imageWidth: 32 * tiles,\n          imageHeight: 32 * tiles,\n          offsetX: Math.floor((32 * tiles - cropped.width) / 2),\n          offsetY: Math.floor((32 * tiles - cropped.height) / 2),\n          orientation,\n        })\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }\n\n  drawImageData(canvas, imageData) {\n    const ctx = canvas.getContext('2d')\n    ctx.imageSmoothingEnabled = false\n\n    const { width } = this.props\n\n    const pixelScaler = Math.floor(width / imageData.width)\n\n    const scaledImageData = scaleImageData(ctx, imageData, pixelScaler)\n\n    ctx.putImageData(scaledImageData, 0, 0)\n  }\n\n  render() {\n    const { className, width, height } = this.props\n    return (\n      <div className={className}>\n        <canvas\n          style={{ position: 'absolute', background: 'red', display: 'none' }}\n          width={96}\n          height={96}\n          ref=\"offscreen_canvas\"\n        />\n        <div className=\"wrapper\">\n          <canvas ref=\"canvas_lego\" width={width} height={width} />\n          {/* <canvas\n            ref=\"canvas\"\n            width={width}\n            height={width}\n          />\n          <canvas\n            ref=\"original_canvas\"\n            width={width}\n            height={width}\n          /> */}\n          <style>{`\n          div.wrapper {\n            display: flex;\n            flex: 1;\n            justify-content: center;\n            flex-direction: column;\n          }\n\n          .wrapper canvas {\n            width: 48vw;\n            height: 48vw;\n            margin: 0 auto;\n            background: white;\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.7);\n          }\n        `}</style>\n        </div>\n      </div>\n    )\n  }\n}\n\nLegoRenderer.propTypes = {\n  sourceData: PropTypes.string.isRequired,\n  orientation: PropTypes.oneOf(['topDown', 'sideView']),\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  className: PropTypes.string,\n}\n\nLegoRenderer.defaultProps = {\n  orientation: 'topDown',\n  className: '',\n}\n\nexport default withContentRect('bounds')(\n  ({ measureRef, measure, contentRect, ...props }) => (\n    <div ref={measureRef}>\n      <LegoRenderer {...props} {...contentRect.bounds} />\n    </div>\n  )\n)\n","export default function cropImageFromCanvas(canvas) {\n  const ctx = canvas.getContext('2d')\n  let w = canvas.width\n  let h = canvas.height\n  let pix = { x: [], y: [] }\n\n  if (!canvas.width || !canvas.height) return\n  let imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\n  let x\n  let y\n  let index\n\n  for (y = 0; y < h; y++) {\n    for (x = 0; x < w; x++) {\n      index = (y * w + x) * 4\n      if (imageData.data[index + 3] > 0) {\n        pix.x.push(x)\n        pix.y.push(y)\n      }\n    }\n  }\n  pix.x.sort(function(a, b) {\n    return a - b\n  })\n  pix.y.sort(function(a, b) {\n    return a - b\n  })\n  var n = pix.x.length - 1\n\n  w = pix.x[n] - pix.x[0] + 1\n  h = pix.y[n] - pix.y[0] + 1\n  if (pix.x[0] > 0) {\n    x = pix.x[0] - 1\n    w += 2\n  } else {\n    x = 0\n  }\n  if (pix.y[0] > 0) {\n    y = pix.y[0] - 1\n    h += 2\n  } else {\n    y = 0\n  }\n\n  if (!w || !h) return\n  var cut = ctx.getImageData(x, y, w, h)\n\n  return cut\n}\n"],"sourceRoot":""}